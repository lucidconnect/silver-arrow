// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package Kernel

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ExecutionDetail is an auto generated low-level Go binding around an user-defined struct.
type ExecutionDetail struct {
	ValidUntil *big.Int
	ValidAfter *big.Int
	Executor   common.Address
	Validator  common.Address
}

// UserOperation is an auto generated low-level Go binding around an user-defined struct.
type UserOperation struct {
	Sender               common.Address
	Nonce                *big.Int
	InitCode             []byte
	CallData             []byte
	CallGasLimit         *big.Int
	VerificationGasLimit *big.Int
	PreVerificationGas   *big.Int
	MaxFeePerGas         *big.Int
	MaxPriorityFeePerGas *big.Int
	PaymasterAndData     []byte
	Signature            []byte
}

// KernelMetaData contains all meta data concerning the Kernel contract.
var KernelMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"contractIEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldValidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newValidator\",\"type\":\"address\"}],\"name\":\"DefaultValidatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"ExecutionChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_disableFlag\",\"type\":\"bytes4\"}],\"name\":\"disableMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contractIEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enumOperation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultValidator\",\"outputs\":[{\"internalType\":\"contractIKernelValidator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDisabledMode\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"getExecution\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"contractIKernelValidator\",\"name\":\"validator\",\"type\":\"address\"}],\"internalType\":\"structExecutionDetail\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastDisabledTime\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIKernelValidator\",\"name\":\"_defaultValidator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIKernelValidator\",\"name\":\"_defaultValidator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"setDefaultValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"contractIKernelValidator\",\"name\":\"_validator\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"_validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"_validAfter\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"_enableData\",\"type\":\"bytes\"}],\"name\":\"setExecution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"structUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "0x6101806040523480156200001257600080fd5b5060405162002d1838038062002d18833981016040819052620000359162000223565b604080518082018252600681526512d95c9b995b60d21b60208083019190915282518084019093526005835264181718171960d91b9083015282916200007d8260006200016e565b610120526200008e8160016200016e565b61014052815160208084019190912060e052815190820120610100524660a0526200011c60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0526001600160a01b0381166101605260016200013f620001a7565b600101600a6101000a8154816001600160a01b0302191690836001600160a01b0316021790555050506200045d565b60006020835110156200018e576200018683620001d7565b9050620001a1565b816200019b8482620002fa565b5060ff90505b92915050565b600080620001a160017f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd9620003c6565b600080829050601f815111156200020e578260405163305a27a960e01b8152600401620002059190620003e8565b60405180910390fd5b80516200021b8262000438565b179392505050565b6000602082840312156200023657600080fd5b81516001600160a01b03811681146200024e57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200028057607f821691505b602082108103620002a157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f557600081815260208120601f850160051c81016020861015620002d05750805b601f850160051c820191505b81811015620002f157828155600101620002dc565b5050505b505050565b81516001600160401b0381111562000316576200031662000255565b6200032e816200032784546200026b565b84620002a7565b602080601f8311600181146200036657600084156200034d5750858301515b600019600386901b1c1916600185901b178555620002f1565b600085815260208120601f198616915b82811015620003975788860151825594840194600190910190840162000376565b5085821015620003b65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115620001a157634e487b7160e01b600052601160045260246000fd5b600060208083528351808285015260005b818110156200041757858101830151858201604001528201620003f9565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620002a15760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051610160516128166200050260003960008181610140015281816104e20152818161073201528181610906015281816109b601528181610e8d01528181610fa5015281816110e1015281816112ed01526114640152600061125b0152600061123101526000611c5101526000611c2901526000611b8401526000611bae01526000611bd801526128166000f3fe60806040526004361061012e5760003560e01c806354fd4d50116100ab578063b0d691fe1161006f578063b0d691fe146104d0578063bc197c8114610504578063d087d28814610533578063d1f5789414610548578063d541622114610568578063f23a6e611461058857610135565b806354fd4d501461041657806355b14f501461044757806357b750471461046757806384b0196e1461047c57806388e7fd06146104a457610135565b80633659cfe6116100f25780633659cfe61461031b5780633a871cdd1461033b5780633e1b08121461036957806351166ba01461038957806351945447146103f657610135565b806306fdde03146102215780630b3dc35414610269578063150b7a02146102965780631626ba7e146102db57806329f8b174146102fb57610135565b3661013557005b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101b25760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20656e747279706f696e740000000060448201526064015b60405180910390fd5b600080356001600160e01b031916905060006101cc6105b5565b6001600160e01b0319831660009081526002919091016020526040812054600160601b90046001600160a01b0316915036908037600080366000845af43d6000803e80801561021a573d6000f35b3d6000fd5b005b34801561022d57600080fd5b506102536040518060400160405280600681526020016512d95c9b995b60d21b81525081565b6040516102609190611d10565b60405180910390f35b34801561027557600080fd5b5061027e6105e9565b6040516001600160a01b039091168152602001610260565b3480156102a257600080fd5b506102c26102b1366004611d93565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610260565b3480156102e757600080fd5b506102c26102f6366004611e05565b61060c565b34801561030757600080fd5b5061021f610316366004611e7e565b610727565b34801561032757600080fd5b5061021f610336366004611f18565b6108fb565b34801561034757600080fd5b5061035b610356366004611f35565b6109a9565b604051908152602001610260565b34801561037557600080fd5b5061035b610384366004611f88565b610e66565b34801561039557600080fd5b506103a96103a4366004611fb1565b610f00565b60408051825165ffffffffffff908116825260208085015190911690820152828201516001600160a01b039081169282019290925260609283015190911691810191909152608001610260565b34801561040257600080fd5b5061021f610411366004611fcc565b610f9a565b34801561042257600080fd5b5061025360405180604001604052806005815260200164181718171960d91b81525081565b34801561045357600080fd5b5061021f610462366004612043565b6110d6565b34801561047357600080fd5b506102c261120d565b34801561048857600080fd5b50610491611223565b604051610260979695949392919061207e565b3480156104b057600080fd5b506104b96112ab565b60405165ffffffffffff9091168152602001610260565b3480156104dc57600080fd5b5061027e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561051057600080fd5b506102c261051f366004612158565b63bc197c8160e01b98975050505050505050565b34801561053f57600080fd5b5061035b6112ce565b34801561055457600080fd5b5061021f610563366004612043565b611365565b34801561057457600080fd5b5061021f610583366004611fb1565b611459565b34801561059457600080fd5b506102c26105a3366004612216565b63f23a6e6160e01b9695505050505050565b6000806105e360017f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd96122a7565b92915050565b60006105f36105b5565b60010154600160501b90046001600160a01b0316919050565b6000806106176105b5565b6001015460405163199ed7c960e11b8152600160501b9091046001600160a01b03169063333daf9290610652908890889088906004016122e3565b602060405180830381865afa15801561066f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106939190612306565b905060006106a0826114fd565b905042816020015165ffffffffffff1611156106c957506001600160e01b031991506107209050565b42816040015165ffffffffffff1610156106f057506001600160e01b031991506107209050565b80516001600160a01b03161561071357506001600160e01b031991506107209050565b50630b135d3f60e11b9150505b9392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061075d57503330145b6107795760405162461bcd60e51b81526004016101a99061231f565b60405180608001604052808565ffffffffffff1681526020018465ffffffffffff168152602001876001600160a01b03168152602001866001600160a01b03168152506107c46105b5565b6001600160e01b031989166000908152600291909101602090815260409182902083518154928501518585015165ffffffffffff9283166001600160601b031990951694909417600160301b9290911691909102176001600160601b0316600160601b6001600160a01b0393841602178155606090930151600190930180546001600160a01b031916938216939093179092555163064acaab60e11b815290861690630c9595569061087c908590859060040161236c565b600060405180830381600087803b15801561089657600080fd5b505af11580156108aa573d6000803e3d6000fd5b50506040516001600160a01b038089169350891691506001600160e01b03198a16907fed03d2572564284398470d3f266a693e29ddfff3eba45fc06c5e91013d32135390600090a450505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061093157503330145b61094d5760405162461bcd60e51b81526004016101a99061231f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8181556040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a235760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20656e747279506f696e740000000060448201526064016101a9565b6000610a33610140860186612388565b610a42916004916000916123ce565b610a4b916123f8565b9050610a556105b5565b6001015460e01b81166001600160e01b03191615610aad5760405162461bcd60e51b81526020600482015260156024820152741ad95c9b995b0e881b5bd91948191a5cd8589b1959605a1b60448201526064016101a9565b6000610ab8866124f3565b9050600080610aca6060890189612388565b610ad9916004916000916123ce565b610ae2916123f8565b90506001600160e01b03198416600003610b7a57610aff886124f3565b9250610b0f610140890189612388565b610b1d9160049082906123ce565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505050610140840152610b5f6105b5565b60010154600160501b90046001600160a01b03169150610d8c565b6001600160e01b03198416600160e01b03610c70576000610b996105b5565b6001600160e01b0319831660009081526002919091016020526040902060018101546001600160a01b03169350905082610bec57610bd56105b5565b60010154600160501b90046001600160a01b031692505b610bfa6101408a018a612388565b610c089160049082906123ce565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506101408501525460d081901b6001600160d01b031916600160301b90910460a01b65ffffffffffff60a01b16179450610d8c565b6001600160e01b03198416600160e11b03610d7f57610c93610140890189612388565b610ca2916024916010916123ce565b610cab91612601565b60601c91503660008181610ccc85610cc76101408f018f612388565b61156e565b60405163064acaab60e11b8152949d50929750909550935091506001600160a01b03871690630c95955690610d07908790879060040161236c565b600060405180830381600087803b158015610d2157600080fd5b505af1158015610d35573d6000803e3d6000fd5b5050505081818080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050505061014088015250610d8c92505050565b6001945050505050610720565b8515610dde57604051600090339088908381818185875af1925050503d8060008114610dd4576040519150601f19603f3d011682016040523d82523d6000602084013e610dd9565b606091505b505050505b610e5a85836001600160a01b0316633a871cdd868b8b6040518463ffffffff1660e01b8152600401610e129392919061262f565b6020604051808303816000875af1158015610e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e559190612306565b61191f565b98975050505050505050565b604051631aab3f0d60e11b81523060048201526001600160c01b03821660248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906335567e1a90604401602060405180830381865afa158015610edc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e39190612306565b604080516080810182526000808252602082018190529181018290526060810191909152610f2c6105b5565b6001600160e01b0319909216600090815260029290920160209081526040928390208351608081018552815465ffffffffffff8082168352600160301b820416938201939093526001600160a01b03600160601b909304831694810194909452600101541660608301525090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110125760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20656e747279706f696e740000000060448201526064016101a9565b60006060600183600181111561102a5761102a612721565b036110795761106f8786868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506119f292505050565b90925090506110c0565b6110ba878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a2892505050565b90925090505b816110cd57805160208201fd5b50505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061110c57503330145b6111285760405162461bcd60e51b81526004016101a99061231f565b60006111326105b5565b60010154600160501b90046001600160a01b03169050836111516105b5565b6001018054600160501b600160f01b031916600160501b6001600160a01b0393841602179055604051858216918316907fa35f5cdc5fbabb614b4cd5064ce5543f43dc8fab0e4da41255230eb8aba2531c90600090a360405163064acaab60e11b81526001600160a01b03851690630c959556906111d5908690869060040161236c565b600060405180830381600087803b1580156111ef57600080fd5b505af1158015611203573d6000803e3d6000fd5b5050505050505050565b60006112176105b5565b6001015460e01b919050565b6000606080828080836112567f000000000000000000000000000000000000000000000000000000000000000083611a60565b6112817f00000000000000000000000000000000000000000000000000000000000000006001611a60565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60006112b56105b5565b60010154640100000000900465ffffffffffff16919050565b604051631aab3f0d60e11b8152306004820152600060248201819052907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906335567e1a90604401602060405180830381865afa15801561133c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113609190612306565b905090565b600061136f6105b5565b6001810154909150600160501b90046001600160a01b0316156113d45760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a20616c726561647920696e697469616c697a65640000000060448201526064016101a9565b600181018054600160501b600160f01b031916600160501b6001600160a01b038716908102919091179091556040516000907fa35f5cdc5fbabb614b4cd5064ce5543f43dc8fab0e4da41255230eb8aba2531c908290a360405163064acaab60e11b81526001600160a01b03851690630c959556906111d5908690869060040161236c565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061148f57503330145b6114ab5760405162461bcd60e51b81526004016101a99061231f565b806114b46105b5565b600101805463ffffffff191660e09290921c919091179055426114d56105b5565b60010160046101000a81548165ffffffffffff021916908365ffffffffffff16021790555050565b60408051606081018252600080825260208201819052918101919091528160a081901c65ffffffffffff8116600003611539575065ffffffffffff5b604080516060810182526001600160a01b03909316835260d09490941c602083015265ffffffffffff16928101929092525090565b6000368181818061158360586038898b6123ce565b61158c91612737565b90508760588861159c8483612755565b926115a9939291906123ce565b9095509350600088886115bd846058612755565b906115c9856078612755565b926115d6939291906123ce565b6115df91612737565b60001c905060006116c07f3ce406685c1b3551d706d85a68afdaa49ac4e07b451ad9b8ff8b58c3ee9641768c8c8c60049060249261161f939291906123ce565b61162891612737565b60001c8d8d60249060389261163f939291906123ce565b61164891612601565b60601c8b8b60405161165b929190612768565b6040519081900381206116a595949392916020019485526001600160e01b031993909316602085015260408401919091526001600160a01b03166060830152608082015260a00190565b60405160208183030381529060405280519060200120611b0b565b90506117a86116cd6105b5565b60010154600160501b90046001600160a01b031663333daf92838d8d6116f4896078612755565b90886117018b6078612755565b61170b9190612755565b92611718939291906123ce565b6040518463ffffffff1660e01b8152600401611736939291906122e3565b602060405180830381865afa158015611753573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117779190612306565b60a06001600160601b038016901b8c8c600490602492611799939291906123ce565b6117a291612737565b1661191f565b97508989836117b8866078612755565b6117c29190612755565b6117cd9282906123ce565b60408051608081019091529196509450806117ec600a60048d8f6123ce565b6117f591612778565b60d01c815260200161180b6010600a8d8f6123ce565b61181491612778565b60d01c815260200161182a603860248d8f6123ce565b61183391612601565b60601c8152602001611849602460108d8f6123ce565b61185291612601565b60601c905261185f6105b5565b6001600160e01b03198d166000908152600291909101602090815260409182902083518154928501519385015165ffffffffffff9182166001600160601b031990941693909317600160301b9190941602929092176001600160601b0316600160601b6001600160a01b0392831602178255606090920151600190910180546001600160a01b03191691909216179055878a60588b6118fe8783612755565b9261190b939291906123ce565b975097509750505050939792965093509350565b6000816001600160a01b0316836001600160a01b031614611942575060016105e3565b60d083901c60a084901c65ffffffffffff8116600003611965575065ffffffffffff5b60d084901c60a085901c65ffffffffffff8116600003611988575065ffffffffffff5b8165ffffffffffff168465ffffffffffff1610156119a4578193505b8065ffffffffffff168365ffffffffffff1611156119c0578092505b60d08465ffffffffffff16901b60a08465ffffffffffff16901b886001600160a01b0316171794505050505092915050565b60006060600080845160208601875af491503d604051602082018101604052818152816000602083013e80925050509250929050565b6000606060008084516020860187895af191503d604051602082018101604052818152816000602083013e8092505050935093915050565b606060ff8314611a7a57611a7383611b38565b90506105e3565b818054611a86906127a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611ab2906127a6565b8015611aff5780601f10611ad457610100808354040283529160200191611aff565b820191906000526020600020905b815481529060010190602001808311611ae257829003601f168201915b505050505090506105e3565b60006105e3611b18611b77565b8360405161190160f01b8152600281019290925260228201526042902090565b60606000611b4583611ca2565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611bd057507f000000000000000000000000000000000000000000000000000000000000000046145b15611bfa57507f000000000000000000000000000000000000000000000000000000000000000090565b611360604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600060ff8216601f8111156105e357604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015611cf057602081850181015186830182015201611cd4565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006107206020830184611cca565b6001600160a01b0381168114611d3857600080fd5b50565b8035611d4681611d23565b919050565b60008083601f840112611d5d57600080fd5b5081356001600160401b03811115611d7457600080fd5b602083019150836020828501011115611d8c57600080fd5b9250929050565b600080600080600060808688031215611dab57600080fd5b8535611db681611d23565b94506020860135611dc681611d23565b93506040860135925060608601356001600160401b03811115611de857600080fd5b611df488828901611d4b565b969995985093965092949392505050565b600080600060408486031215611e1a57600080fd5b8335925060208401356001600160401b03811115611e3757600080fd5b611e4386828701611d4b565b9497909650939450505050565b80356001600160e01b031981168114611d4657600080fd5b803565ffffffffffff81168114611d4657600080fd5b600080600080600080600060c0888a031215611e9957600080fd5b611ea288611e50565b96506020880135611eb281611d23565b95506040880135611ec281611d23565b9450611ed060608901611e68565b9350611ede60808901611e68565b925060a08801356001600160401b03811115611ef957600080fd5b611f058a828b01611d4b565b989b979a50959850939692959293505050565b600060208284031215611f2a57600080fd5b813561072081611d23565b600080600060608486031215611f4a57600080fd5b83356001600160401b03811115611f6057600080fd5b84016101608187031215611f7357600080fd5b95602085013595506040909401359392505050565b600060208284031215611f9a57600080fd5b81356001600160c01b038116811461072057600080fd5b600060208284031215611fc357600080fd5b61072082611e50565b600080600080600060808688031215611fe457600080fd5b8535611fef81611d23565b94506020860135935060408601356001600160401b0381111561201157600080fd5b61201d88828901611d4b565b90945092505060608601356002811061203557600080fd5b809150509295509295909350565b60008060006040848603121561205857600080fd5b833561206381611d23565b925060208401356001600160401b03811115611e3757600080fd5b60ff60f81b881681526000602060e08184015261209e60e084018a611cca565b83810360408501526120b0818a611cca565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015612102578351835292840192918401916001016120e6565b50909c9b505050505050505050505050565b60008083601f84011261212657600080fd5b5081356001600160401b0381111561213d57600080fd5b6020830191508360208260051b8501011115611d8c57600080fd5b60008060008060008060008060a0898b03121561217457600080fd5b883561217f81611d23565b9750602089013561218f81611d23565b965060408901356001600160401b03808211156121ab57600080fd5b6121b78c838d01612114565b909850965060608b01359150808211156121d057600080fd5b6121dc8c838d01612114565b909650945060808b01359150808211156121f557600080fd5b506122028b828c01611d4b565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561222f57600080fd5b863561223a81611d23565b9550602087013561224a81611d23565b9450604087013593506060870135925060808701356001600160401b0381111561227357600080fd5b61227f89828a01611d4b565b979a9699509497509295939492505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156105e3576105e3612291565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8381526040602082015260006122fd6040830184866122ba565b95945050505050565b60006020828403121561231857600080fd5b5051919050565b6020808252602d908201527f6163636f756e743a206e6f742066726f6d20656e747279706f696e74206f722060408201526c37bbb732b91037b91039b2b63360991b606082015260800190565b6020815260006123806020830184866122ba565b949350505050565b6000808335601e1984360301811261239f57600080fd5b8301803591506001600160401b038211156123b957600080fd5b602001915036819003821315611d8c57600080fd5b600080858511156123de57600080fd5b838611156123eb57600080fd5b5050820193919092039150565b6001600160e01b031981358181169160048510156124205780818660040360031b1b83161692505b505092915050565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b038111828210171561246157612461612428565b60405290565b600082601f83011261247857600080fd5b81356001600160401b038082111561249257612492612428565b604051601f8301601f19908116603f011681019082821181831017156124ba576124ba612428565b816040528381528660208588010111156124d357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000610160823603121561250657600080fd5b61250e61243e565b61251783611d3b565b81526020830135602082015260408301356001600160401b038082111561253d57600080fd5b61254936838701612467565b6040840152606085013591508082111561256257600080fd5b61256e36838701612467565b60608401526080850135608084015260a085013560a084015260c085013560c084015260e085013560e084015261010091508185013582840152610120915081850135818111156125be57600080fd5b6125ca36828801612467565b8385015250610140915081850135818111156125e557600080fd5b6125f136828801612467565b8385015250505080915050919050565b6001600160601b031981358181169160148510156124205760149490940360031b84901b1690921692915050565b606081526126496060820185516001600160a01b03169052565b60208401516080820152600060408501516101608060a08501526126716101c0850183611cca565b91506060870151605f19808685030160c087015261268f8483611cca565b9350608089015160e087015260a08901519150610100828188015260c08a01519250610120838189015260e08b0151935061014084818a0152828c0151868a0152818c0151955083898803016101808a01526126eb8787611cca565b9650808c0151955050505080868503016101a0870152505061270d8282611cca565b602085019690965250505060400152919050565b634e487b7160e01b600052602160045260246000fd5b803560208310156105e357600019602084900360031b1b1692915050565b808201808211156105e3576105e3612291565b8183823760009101908152919050565b6001600160d01b031981358181169160068510156124205760069490940360031b84901b1690921692915050565b600181811c908216806127ba57607f821691505b6020821081036127da57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220e37cea1e670f39eb2221a01c3c8649daf0a3b9aaa7771c347c2b2be9da7d35c464736f6c63430008130033",
}

// KernelABI is the input ABI used to generate the binding from.
// Deprecated: Use KernelMetaData.ABI instead.
var KernelABI = KernelMetaData.ABI

// KernelBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use KernelMetaData.Bin instead.
var KernelBin = KernelMetaData.Bin

// DeployKernel deploys a new Ethereum contract, binding an instance of Kernel to it.
func DeployKernel(auth *bind.TransactOpts, backend bind.ContractBackend, _entryPoint common.Address) (common.Address, *types.Transaction, *Kernel, error) {
	parsed, err := KernelMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(KernelBin), backend, _entryPoint)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Kernel{KernelCaller: KernelCaller{contract: contract}, KernelTransactor: KernelTransactor{contract: contract}, KernelFilterer: KernelFilterer{contract: contract}}, nil
}

// Kernel is an auto generated Go binding around an Ethereum contract.
type Kernel struct {
	KernelCaller     // Read-only binding to the contract
	KernelTransactor // Write-only binding to the contract
	KernelFilterer   // Log filterer for contract events
}

// KernelCaller is an auto generated read-only Go binding around an Ethereum contract.
type KernelCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// KernelTransactor is an auto generated write-only Go binding around an Ethereum contract.
type KernelTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// KernelFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type KernelFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// KernelSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type KernelSession struct {
	Contract     *Kernel           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// KernelCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type KernelCallerSession struct {
	Contract *KernelCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// KernelTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type KernelTransactorSession struct {
	Contract     *KernelTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// KernelRaw is an auto generated low-level Go binding around an Ethereum contract.
type KernelRaw struct {
	Contract *Kernel // Generic contract binding to access the raw methods on
}

// KernelCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type KernelCallerRaw struct {
	Contract *KernelCaller // Generic read-only contract binding to access the raw methods on
}

// KernelTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type KernelTransactorRaw struct {
	Contract *KernelTransactor // Generic write-only contract binding to access the raw methods on
}

// NewKernel creates a new instance of Kernel, bound to a specific deployed contract.
func NewKernel(address common.Address, backend bind.ContractBackend) (*Kernel, error) {
	contract, err := bindKernel(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Kernel{KernelCaller: KernelCaller{contract: contract}, KernelTransactor: KernelTransactor{contract: contract}, KernelFilterer: KernelFilterer{contract: contract}}, nil
}

// NewKernelCaller creates a new read-only instance of Kernel, bound to a specific deployed contract.
func NewKernelCaller(address common.Address, caller bind.ContractCaller) (*KernelCaller, error) {
	contract, err := bindKernel(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &KernelCaller{contract: contract}, nil
}

// NewKernelTransactor creates a new write-only instance of Kernel, bound to a specific deployed contract.
func NewKernelTransactor(address common.Address, transactor bind.ContractTransactor) (*KernelTransactor, error) {
	contract, err := bindKernel(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &KernelTransactor{contract: contract}, nil
}

// NewKernelFilterer creates a new log filterer instance of Kernel, bound to a specific deployed contract.
func NewKernelFilterer(address common.Address, filterer bind.ContractFilterer) (*KernelFilterer, error) {
	contract, err := bindKernel(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &KernelFilterer{contract: contract}, nil
}

// bindKernel binds a generic wrapper to an already deployed contract.
func bindKernel(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := KernelMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Kernel *KernelRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Kernel.Contract.KernelCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Kernel *KernelRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Kernel.Contract.KernelTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Kernel *KernelRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Kernel.Contract.KernelTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Kernel *KernelCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Kernel.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Kernel *KernelTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Kernel.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Kernel *KernelTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Kernel.Contract.contract.Transact(opts, method, params...)
}

// Eip712Domain is a free data retrieval call binding the contract method 0x84b0196e.
//
// Solidity: function eip712Domain() view returns(bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)
func (_Kernel *KernelCaller) Eip712Domain(opts *bind.CallOpts) (struct {
	Fields            [1]byte
	Name              string
	Version           string
	ChainId           *big.Int
	VerifyingContract common.Address
	Salt              [32]byte
	Extensions        []*big.Int
}, error) {
	var out []interface{}
	err := _Kernel.contract.Call(opts, &out, "eip712Domain")

	outstruct := new(struct {
		Fields            [1]byte
		Name              string
		Version           string
		ChainId           *big.Int
		VerifyingContract common.Address
		Salt              [32]byte
		Extensions        []*big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Fields = *abi.ConvertType(out[0], new([1]byte)).(*[1]byte)
	outstruct.Name = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.Version = *abi.ConvertType(out[2], new(string)).(*string)
	outstruct.ChainId = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.VerifyingContract = *abi.ConvertType(out[4], new(common.Address)).(*common.Address)
	outstruct.Salt = *abi.ConvertType(out[5], new([32]byte)).(*[32]byte)
	outstruct.Extensions = *abi.ConvertType(out[6], new([]*big.Int)).(*[]*big.Int)

	return *outstruct, err

}

// Eip712Domain is a free data retrieval call binding the contract method 0x84b0196e.
//
// Solidity: function eip712Domain() view returns(bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)
func (_Kernel *KernelSession) Eip712Domain() (struct {
	Fields            [1]byte
	Name              string
	Version           string
	ChainId           *big.Int
	VerifyingContract common.Address
	Salt              [32]byte
	Extensions        []*big.Int
}, error) {
	return _Kernel.Contract.Eip712Domain(&_Kernel.CallOpts)
}

// Eip712Domain is a free data retrieval call binding the contract method 0x84b0196e.
//
// Solidity: function eip712Domain() view returns(bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)
func (_Kernel *KernelCallerSession) Eip712Domain() (struct {
	Fields            [1]byte
	Name              string
	Version           string
	ChainId           *big.Int
	VerifyingContract common.Address
	Salt              [32]byte
	Extensions        []*big.Int
}, error) {
	return _Kernel.Contract.Eip712Domain(&_Kernel.CallOpts)
}

// EntryPoint is a free data retrieval call binding the contract method 0xb0d691fe.
//
// Solidity: function entryPoint() view returns(address)
func (_Kernel *KernelCaller) EntryPoint(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Kernel.contract.Call(opts, &out, "entryPoint")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// EntryPoint is a free data retrieval call binding the contract method 0xb0d691fe.
//
// Solidity: function entryPoint() view returns(address)
func (_Kernel *KernelSession) EntryPoint() (common.Address, error) {
	return _Kernel.Contract.EntryPoint(&_Kernel.CallOpts)
}

// EntryPoint is a free data retrieval call binding the contract method 0xb0d691fe.
//
// Solidity: function entryPoint() view returns(address)
func (_Kernel *KernelCallerSession) EntryPoint() (common.Address, error) {
	return _Kernel.Contract.EntryPoint(&_Kernel.CallOpts)
}

// GetDefaultValidator is a free data retrieval call binding the contract method 0x0b3dc354.
//
// Solidity: function getDefaultValidator() view returns(address)
func (_Kernel *KernelCaller) GetDefaultValidator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Kernel.contract.Call(opts, &out, "getDefaultValidator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetDefaultValidator is a free data retrieval call binding the contract method 0x0b3dc354.
//
// Solidity: function getDefaultValidator() view returns(address)
func (_Kernel *KernelSession) GetDefaultValidator() (common.Address, error) {
	return _Kernel.Contract.GetDefaultValidator(&_Kernel.CallOpts)
}

// GetDefaultValidator is a free data retrieval call binding the contract method 0x0b3dc354.
//
// Solidity: function getDefaultValidator() view returns(address)
func (_Kernel *KernelCallerSession) GetDefaultValidator() (common.Address, error) {
	return _Kernel.Contract.GetDefaultValidator(&_Kernel.CallOpts)
}

// GetDisabledMode is a free data retrieval call binding the contract method 0x57b75047.
//
// Solidity: function getDisabledMode() view returns(bytes4)
func (_Kernel *KernelCaller) GetDisabledMode(opts *bind.CallOpts) ([4]byte, error) {
	var out []interface{}
	err := _Kernel.contract.Call(opts, &out, "getDisabledMode")

	if err != nil {
		return *new([4]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([4]byte)).(*[4]byte)

	return out0, err

}

// GetDisabledMode is a free data retrieval call binding the contract method 0x57b75047.
//
// Solidity: function getDisabledMode() view returns(bytes4)
func (_Kernel *KernelSession) GetDisabledMode() ([4]byte, error) {
	return _Kernel.Contract.GetDisabledMode(&_Kernel.CallOpts)
}

// GetDisabledMode is a free data retrieval call binding the contract method 0x57b75047.
//
// Solidity: function getDisabledMode() view returns(bytes4)
func (_Kernel *KernelCallerSession) GetDisabledMode() ([4]byte, error) {
	return _Kernel.Contract.GetDisabledMode(&_Kernel.CallOpts)
}

// GetExecution is a free data retrieval call binding the contract method 0x51166ba0.
//
// Solidity: function getExecution(bytes4 _selector) view returns((uint48,uint48,address,address))
func (_Kernel *KernelCaller) GetExecution(opts *bind.CallOpts, _selector [4]byte) (ExecutionDetail, error) {
	var out []interface{}
	err := _Kernel.contract.Call(opts, &out, "getExecution", _selector)

	if err != nil {
		return *new(ExecutionDetail), err
	}

	out0 := *abi.ConvertType(out[0], new(ExecutionDetail)).(*ExecutionDetail)

	return out0, err

}

// GetExecution is a free data retrieval call binding the contract method 0x51166ba0.
//
// Solidity: function getExecution(bytes4 _selector) view returns((uint48,uint48,address,address))
func (_Kernel *KernelSession) GetExecution(_selector [4]byte) (ExecutionDetail, error) {
	return _Kernel.Contract.GetExecution(&_Kernel.CallOpts, _selector)
}

// GetExecution is a free data retrieval call binding the contract method 0x51166ba0.
//
// Solidity: function getExecution(bytes4 _selector) view returns((uint48,uint48,address,address))
func (_Kernel *KernelCallerSession) GetExecution(_selector [4]byte) (ExecutionDetail, error) {
	return _Kernel.Contract.GetExecution(&_Kernel.CallOpts, _selector)
}

// GetLastDisabledTime is a free data retrieval call binding the contract method 0x88e7fd06.
//
// Solidity: function getLastDisabledTime() view returns(uint48)
func (_Kernel *KernelCaller) GetLastDisabledTime(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Kernel.contract.Call(opts, &out, "getLastDisabledTime")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetLastDisabledTime is a free data retrieval call binding the contract method 0x88e7fd06.
//
// Solidity: function getLastDisabledTime() view returns(uint48)
func (_Kernel *KernelSession) GetLastDisabledTime() (*big.Int, error) {
	return _Kernel.Contract.GetLastDisabledTime(&_Kernel.CallOpts)
}

// GetLastDisabledTime is a free data retrieval call binding the contract method 0x88e7fd06.
//
// Solidity: function getLastDisabledTime() view returns(uint48)
func (_Kernel *KernelCallerSession) GetLastDisabledTime() (*big.Int, error) {
	return _Kernel.Contract.GetLastDisabledTime(&_Kernel.CallOpts)
}

// GetNonce is a free data retrieval call binding the contract method 0x3e1b0812.
//
// Solidity: function getNonce(uint192 key) view returns(uint256)
func (_Kernel *KernelCaller) GetNonce(opts *bind.CallOpts, key *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Kernel.contract.Call(opts, &out, "getNonce", key)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetNonce is a free data retrieval call binding the contract method 0x3e1b0812.
//
// Solidity: function getNonce(uint192 key) view returns(uint256)
func (_Kernel *KernelSession) GetNonce(key *big.Int) (*big.Int, error) {
	return _Kernel.Contract.GetNonce(&_Kernel.CallOpts, key)
}

// GetNonce is a free data retrieval call binding the contract method 0x3e1b0812.
//
// Solidity: function getNonce(uint192 key) view returns(uint256)
func (_Kernel *KernelCallerSession) GetNonce(key *big.Int) (*big.Int, error) {
	return _Kernel.Contract.GetNonce(&_Kernel.CallOpts, key)
}

// GetNonce0 is a free data retrieval call binding the contract method 0xd087d288.
//
// Solidity: function getNonce() view returns(uint256)
func (_Kernel *KernelCaller) GetNonce0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Kernel.contract.Call(opts, &out, "getNonce0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetNonce0 is a free data retrieval call binding the contract method 0xd087d288.
//
// Solidity: function getNonce() view returns(uint256)
func (_Kernel *KernelSession) GetNonce0() (*big.Int, error) {
	return _Kernel.Contract.GetNonce0(&_Kernel.CallOpts)
}

// GetNonce0 is a free data retrieval call binding the contract method 0xd087d288.
//
// Solidity: function getNonce() view returns(uint256)
func (_Kernel *KernelCallerSession) GetNonce0() (*big.Int, error) {
	return _Kernel.Contract.GetNonce0(&_Kernel.CallOpts)
}

// IsValidSignature is a free data retrieval call binding the contract method 0x1626ba7e.
//
// Solidity: function isValidSignature(bytes32 hash, bytes signature) view returns(bytes4)
func (_Kernel *KernelCaller) IsValidSignature(opts *bind.CallOpts, hash [32]byte, signature []byte) ([4]byte, error) {
	var out []interface{}
	err := _Kernel.contract.Call(opts, &out, "isValidSignature", hash, signature)

	if err != nil {
		return *new([4]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([4]byte)).(*[4]byte)

	return out0, err

}

// IsValidSignature is a free data retrieval call binding the contract method 0x1626ba7e.
//
// Solidity: function isValidSignature(bytes32 hash, bytes signature) view returns(bytes4)
func (_Kernel *KernelSession) IsValidSignature(hash [32]byte, signature []byte) ([4]byte, error) {
	return _Kernel.Contract.IsValidSignature(&_Kernel.CallOpts, hash, signature)
}

// IsValidSignature is a free data retrieval call binding the contract method 0x1626ba7e.
//
// Solidity: function isValidSignature(bytes32 hash, bytes signature) view returns(bytes4)
func (_Kernel *KernelCallerSession) IsValidSignature(hash [32]byte, signature []byte) ([4]byte, error) {
	return _Kernel.Contract.IsValidSignature(&_Kernel.CallOpts, hash, signature)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Kernel *KernelCaller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Kernel.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Kernel *KernelSession) Name() (string, error) {
	return _Kernel.Contract.Name(&_Kernel.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Kernel *KernelCallerSession) Name() (string, error) {
	return _Kernel.Contract.Name(&_Kernel.CallOpts)
}

// OnERC1155BatchReceived is a free data retrieval call binding the contract method 0xbc197c81.
//
// Solidity: function onERC1155BatchReceived(address , address , uint256[] , uint256[] , bytes ) pure returns(bytes4)
func (_Kernel *KernelCaller) OnERC1155BatchReceived(opts *bind.CallOpts, arg0 common.Address, arg1 common.Address, arg2 []*big.Int, arg3 []*big.Int, arg4 []byte) ([4]byte, error) {
	var out []interface{}
	err := _Kernel.contract.Call(opts, &out, "onERC1155BatchReceived", arg0, arg1, arg2, arg3, arg4)

	if err != nil {
		return *new([4]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([4]byte)).(*[4]byte)

	return out0, err

}

// OnERC1155BatchReceived is a free data retrieval call binding the contract method 0xbc197c81.
//
// Solidity: function onERC1155BatchReceived(address , address , uint256[] , uint256[] , bytes ) pure returns(bytes4)
func (_Kernel *KernelSession) OnERC1155BatchReceived(arg0 common.Address, arg1 common.Address, arg2 []*big.Int, arg3 []*big.Int, arg4 []byte) ([4]byte, error) {
	return _Kernel.Contract.OnERC1155BatchReceived(&_Kernel.CallOpts, arg0, arg1, arg2, arg3, arg4)
}

// OnERC1155BatchReceived is a free data retrieval call binding the contract method 0xbc197c81.
//
// Solidity: function onERC1155BatchReceived(address , address , uint256[] , uint256[] , bytes ) pure returns(bytes4)
func (_Kernel *KernelCallerSession) OnERC1155BatchReceived(arg0 common.Address, arg1 common.Address, arg2 []*big.Int, arg3 []*big.Int, arg4 []byte) ([4]byte, error) {
	return _Kernel.Contract.OnERC1155BatchReceived(&_Kernel.CallOpts, arg0, arg1, arg2, arg3, arg4)
}

// OnERC1155Received is a free data retrieval call binding the contract method 0xf23a6e61.
//
// Solidity: function onERC1155Received(address , address , uint256 , uint256 , bytes ) pure returns(bytes4)
func (_Kernel *KernelCaller) OnERC1155Received(opts *bind.CallOpts, arg0 common.Address, arg1 common.Address, arg2 *big.Int, arg3 *big.Int, arg4 []byte) ([4]byte, error) {
	var out []interface{}
	err := _Kernel.contract.Call(opts, &out, "onERC1155Received", arg0, arg1, arg2, arg3, arg4)

	if err != nil {
		return *new([4]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([4]byte)).(*[4]byte)

	return out0, err

}

// OnERC1155Received is a free data retrieval call binding the contract method 0xf23a6e61.
//
// Solidity: function onERC1155Received(address , address , uint256 , uint256 , bytes ) pure returns(bytes4)
func (_Kernel *KernelSession) OnERC1155Received(arg0 common.Address, arg1 common.Address, arg2 *big.Int, arg3 *big.Int, arg4 []byte) ([4]byte, error) {
	return _Kernel.Contract.OnERC1155Received(&_Kernel.CallOpts, arg0, arg1, arg2, arg3, arg4)
}

// OnERC1155Received is a free data retrieval call binding the contract method 0xf23a6e61.
//
// Solidity: function onERC1155Received(address , address , uint256 , uint256 , bytes ) pure returns(bytes4)
func (_Kernel *KernelCallerSession) OnERC1155Received(arg0 common.Address, arg1 common.Address, arg2 *big.Int, arg3 *big.Int, arg4 []byte) ([4]byte, error) {
	return _Kernel.Contract.OnERC1155Received(&_Kernel.CallOpts, arg0, arg1, arg2, arg3, arg4)
}

// OnERC721Received is a free data retrieval call binding the contract method 0x150b7a02.
//
// Solidity: function onERC721Received(address , address , uint256 , bytes ) pure returns(bytes4)
func (_Kernel *KernelCaller) OnERC721Received(opts *bind.CallOpts, arg0 common.Address, arg1 common.Address, arg2 *big.Int, arg3 []byte) ([4]byte, error) {
	var out []interface{}
	err := _Kernel.contract.Call(opts, &out, "onERC721Received", arg0, arg1, arg2, arg3)

	if err != nil {
		return *new([4]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([4]byte)).(*[4]byte)

	return out0, err

}

// OnERC721Received is a free data retrieval call binding the contract method 0x150b7a02.
//
// Solidity: function onERC721Received(address , address , uint256 , bytes ) pure returns(bytes4)
func (_Kernel *KernelSession) OnERC721Received(arg0 common.Address, arg1 common.Address, arg2 *big.Int, arg3 []byte) ([4]byte, error) {
	return _Kernel.Contract.OnERC721Received(&_Kernel.CallOpts, arg0, arg1, arg2, arg3)
}

// OnERC721Received is a free data retrieval call binding the contract method 0x150b7a02.
//
// Solidity: function onERC721Received(address , address , uint256 , bytes ) pure returns(bytes4)
func (_Kernel *KernelCallerSession) OnERC721Received(arg0 common.Address, arg1 common.Address, arg2 *big.Int, arg3 []byte) ([4]byte, error) {
	return _Kernel.Contract.OnERC721Received(&_Kernel.CallOpts, arg0, arg1, arg2, arg3)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_Kernel *KernelCaller) Version(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Kernel.contract.Call(opts, &out, "version")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_Kernel *KernelSession) Version() (string, error) {
	return _Kernel.Contract.Version(&_Kernel.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_Kernel *KernelCallerSession) Version() (string, error) {
	return _Kernel.Contract.Version(&_Kernel.CallOpts)
}

// DisableMode is a paid mutator transaction binding the contract method 0xd5416221.
//
// Solidity: function disableMode(bytes4 _disableFlag) returns()
func (_Kernel *KernelTransactor) DisableMode(opts *bind.TransactOpts, _disableFlag [4]byte) (*types.Transaction, error) {
	return _Kernel.contract.Transact(opts, "disableMode", _disableFlag)
}

// DisableMode is a paid mutator transaction binding the contract method 0xd5416221.
//
// Solidity: function disableMode(bytes4 _disableFlag) returns()
func (_Kernel *KernelSession) DisableMode(_disableFlag [4]byte) (*types.Transaction, error) {
	return _Kernel.Contract.DisableMode(&_Kernel.TransactOpts, _disableFlag)
}

// DisableMode is a paid mutator transaction binding the contract method 0xd5416221.
//
// Solidity: function disableMode(bytes4 _disableFlag) returns()
func (_Kernel *KernelTransactorSession) DisableMode(_disableFlag [4]byte) (*types.Transaction, error) {
	return _Kernel.Contract.DisableMode(&_Kernel.TransactOpts, _disableFlag)
}

// Execute is a paid mutator transaction binding the contract method 0x51945447.
//
// Solidity: function execute(address to, uint256 value, bytes data, uint8 operation) returns()
func (_Kernel *KernelTransactor) Execute(opts *bind.TransactOpts, to common.Address, value *big.Int, data []byte, operation uint8) (*types.Transaction, error) {
	return _Kernel.contract.Transact(opts, "execute", to, value, data, operation)
}

// Execute is a paid mutator transaction binding the contract method 0x51945447.
//
// Solidity: function execute(address to, uint256 value, bytes data, uint8 operation) returns()
func (_Kernel *KernelSession) Execute(to common.Address, value *big.Int, data []byte, operation uint8) (*types.Transaction, error) {
	return _Kernel.Contract.Execute(&_Kernel.TransactOpts, to, value, data, operation)
}

// Execute is a paid mutator transaction binding the contract method 0x51945447.
//
// Solidity: function execute(address to, uint256 value, bytes data, uint8 operation) returns()
func (_Kernel *KernelTransactorSession) Execute(to common.Address, value *big.Int, data []byte, operation uint8) (*types.Transaction, error) {
	return _Kernel.Contract.Execute(&_Kernel.TransactOpts, to, value, data, operation)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _defaultValidator, bytes _data) returns()
func (_Kernel *KernelTransactor) Initialize(opts *bind.TransactOpts, _defaultValidator common.Address, _data []byte) (*types.Transaction, error) {
	return _Kernel.contract.Transact(opts, "initialize", _defaultValidator, _data)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _defaultValidator, bytes _data) returns()
func (_Kernel *KernelSession) Initialize(_defaultValidator common.Address, _data []byte) (*types.Transaction, error) {
	return _Kernel.Contract.Initialize(&_Kernel.TransactOpts, _defaultValidator, _data)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _defaultValidator, bytes _data) returns()
func (_Kernel *KernelTransactorSession) Initialize(_defaultValidator common.Address, _data []byte) (*types.Transaction, error) {
	return _Kernel.Contract.Initialize(&_Kernel.TransactOpts, _defaultValidator, _data)
}

// SetDefaultValidator is a paid mutator transaction binding the contract method 0x55b14f50.
//
// Solidity: function setDefaultValidator(address _defaultValidator, bytes _data) returns()
func (_Kernel *KernelTransactor) SetDefaultValidator(opts *bind.TransactOpts, _defaultValidator common.Address, _data []byte) (*types.Transaction, error) {
	return _Kernel.contract.Transact(opts, "setDefaultValidator", _defaultValidator, _data)
}

// SetDefaultValidator is a paid mutator transaction binding the contract method 0x55b14f50.
//
// Solidity: function setDefaultValidator(address _defaultValidator, bytes _data) returns()
func (_Kernel *KernelSession) SetDefaultValidator(_defaultValidator common.Address, _data []byte) (*types.Transaction, error) {
	return _Kernel.Contract.SetDefaultValidator(&_Kernel.TransactOpts, _defaultValidator, _data)
}

// SetDefaultValidator is a paid mutator transaction binding the contract method 0x55b14f50.
//
// Solidity: function setDefaultValidator(address _defaultValidator, bytes _data) returns()
func (_Kernel *KernelTransactorSession) SetDefaultValidator(_defaultValidator common.Address, _data []byte) (*types.Transaction, error) {
	return _Kernel.Contract.SetDefaultValidator(&_Kernel.TransactOpts, _defaultValidator, _data)
}

// SetExecution is a paid mutator transaction binding the contract method 0x29f8b174.
//
// Solidity: function setExecution(bytes4 _selector, address _executor, address _validator, uint48 _validUntil, uint48 _validAfter, bytes _enableData) returns()
func (_Kernel *KernelTransactor) SetExecution(opts *bind.TransactOpts, _selector [4]byte, _executor common.Address, _validator common.Address, _validUntil *big.Int, _validAfter *big.Int, _enableData []byte) (*types.Transaction, error) {
	return _Kernel.contract.Transact(opts, "setExecution", _selector, _executor, _validator, _validUntil, _validAfter, _enableData)
}

// SetExecution is a paid mutator transaction binding the contract method 0x29f8b174.
//
// Solidity: function setExecution(bytes4 _selector, address _executor, address _validator, uint48 _validUntil, uint48 _validAfter, bytes _enableData) returns()
func (_Kernel *KernelSession) SetExecution(_selector [4]byte, _executor common.Address, _validator common.Address, _validUntil *big.Int, _validAfter *big.Int, _enableData []byte) (*types.Transaction, error) {
	return _Kernel.Contract.SetExecution(&_Kernel.TransactOpts, _selector, _executor, _validator, _validUntil, _validAfter, _enableData)
}

// SetExecution is a paid mutator transaction binding the contract method 0x29f8b174.
//
// Solidity: function setExecution(bytes4 _selector, address _executor, address _validator, uint48 _validUntil, uint48 _validAfter, bytes _enableData) returns()
func (_Kernel *KernelTransactorSession) SetExecution(_selector [4]byte, _executor common.Address, _validator common.Address, _validUntil *big.Int, _validAfter *big.Int, _enableData []byte) (*types.Transaction, error) {
	return _Kernel.Contract.SetExecution(&_Kernel.TransactOpts, _selector, _executor, _validator, _validUntil, _validAfter, _enableData)
}

// UpgradeTo is a paid mutator transaction binding the contract method 0x3659cfe6.
//
// Solidity: function upgradeTo(address _newImplementation) returns()
func (_Kernel *KernelTransactor) UpgradeTo(opts *bind.TransactOpts, _newImplementation common.Address) (*types.Transaction, error) {
	return _Kernel.contract.Transact(opts, "upgradeTo", _newImplementation)
}

// UpgradeTo is a paid mutator transaction binding the contract method 0x3659cfe6.
//
// Solidity: function upgradeTo(address _newImplementation) returns()
func (_Kernel *KernelSession) UpgradeTo(_newImplementation common.Address) (*types.Transaction, error) {
	return _Kernel.Contract.UpgradeTo(&_Kernel.TransactOpts, _newImplementation)
}

// UpgradeTo is a paid mutator transaction binding the contract method 0x3659cfe6.
//
// Solidity: function upgradeTo(address _newImplementation) returns()
func (_Kernel *KernelTransactorSession) UpgradeTo(_newImplementation common.Address) (*types.Transaction, error) {
	return _Kernel.Contract.UpgradeTo(&_Kernel.TransactOpts, _newImplementation)
}

// ValidateUserOp is a paid mutator transaction binding the contract method 0x3a871cdd.
//
// Solidity: function validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes) userOp, bytes32 userOpHash, uint256 missingAccountFunds) returns(uint256 validationData)
func (_Kernel *KernelTransactor) ValidateUserOp(opts *bind.TransactOpts, userOp UserOperation, userOpHash [32]byte, missingAccountFunds *big.Int) (*types.Transaction, error) {
	return _Kernel.contract.Transact(opts, "validateUserOp", userOp, userOpHash, missingAccountFunds)
}

// ValidateUserOp is a paid mutator transaction binding the contract method 0x3a871cdd.
//
// Solidity: function validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes) userOp, bytes32 userOpHash, uint256 missingAccountFunds) returns(uint256 validationData)
func (_Kernel *KernelSession) ValidateUserOp(userOp UserOperation, userOpHash [32]byte, missingAccountFunds *big.Int) (*types.Transaction, error) {
	return _Kernel.Contract.ValidateUserOp(&_Kernel.TransactOpts, userOp, userOpHash, missingAccountFunds)
}

// ValidateUserOp is a paid mutator transaction binding the contract method 0x3a871cdd.
//
// Solidity: function validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes) userOp, bytes32 userOpHash, uint256 missingAccountFunds) returns(uint256 validationData)
func (_Kernel *KernelTransactorSession) ValidateUserOp(userOp UserOperation, userOpHash [32]byte, missingAccountFunds *big.Int) (*types.Transaction, error) {
	return _Kernel.Contract.ValidateUserOp(&_Kernel.TransactOpts, userOp, userOpHash, missingAccountFunds)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Kernel *KernelTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _Kernel.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Kernel *KernelSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Kernel.Contract.Fallback(&_Kernel.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Kernel *KernelTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Kernel.Contract.Fallback(&_Kernel.TransactOpts, calldata)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Kernel *KernelTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Kernel.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Kernel *KernelSession) Receive() (*types.Transaction, error) {
	return _Kernel.Contract.Receive(&_Kernel.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Kernel *KernelTransactorSession) Receive() (*types.Transaction, error) {
	return _Kernel.Contract.Receive(&_Kernel.TransactOpts)
}

// KernelDefaultValidatorChangedIterator is returned from FilterDefaultValidatorChanged and is used to iterate over the raw logs and unpacked data for DefaultValidatorChanged events raised by the Kernel contract.
type KernelDefaultValidatorChangedIterator struct {
	Event *KernelDefaultValidatorChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *KernelDefaultValidatorChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(KernelDefaultValidatorChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(KernelDefaultValidatorChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *KernelDefaultValidatorChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *KernelDefaultValidatorChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// KernelDefaultValidatorChanged represents a DefaultValidatorChanged event raised by the Kernel contract.
type KernelDefaultValidatorChanged struct {
	OldValidator common.Address
	NewValidator common.Address
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterDefaultValidatorChanged is a free log retrieval operation binding the contract event 0xa35f5cdc5fbabb614b4cd5064ce5543f43dc8fab0e4da41255230eb8aba2531c.
//
// Solidity: event DefaultValidatorChanged(address indexed oldValidator, address indexed newValidator)
func (_Kernel *KernelFilterer) FilterDefaultValidatorChanged(opts *bind.FilterOpts, oldValidator []common.Address, newValidator []common.Address) (*KernelDefaultValidatorChangedIterator, error) {

	var oldValidatorRule []interface{}
	for _, oldValidatorItem := range oldValidator {
		oldValidatorRule = append(oldValidatorRule, oldValidatorItem)
	}
	var newValidatorRule []interface{}
	for _, newValidatorItem := range newValidator {
		newValidatorRule = append(newValidatorRule, newValidatorItem)
	}

	logs, sub, err := _Kernel.contract.FilterLogs(opts, "DefaultValidatorChanged", oldValidatorRule, newValidatorRule)
	if err != nil {
		return nil, err
	}
	return &KernelDefaultValidatorChangedIterator{contract: _Kernel.contract, event: "DefaultValidatorChanged", logs: logs, sub: sub}, nil
}

// WatchDefaultValidatorChanged is a free log subscription operation binding the contract event 0xa35f5cdc5fbabb614b4cd5064ce5543f43dc8fab0e4da41255230eb8aba2531c.
//
// Solidity: event DefaultValidatorChanged(address indexed oldValidator, address indexed newValidator)
func (_Kernel *KernelFilterer) WatchDefaultValidatorChanged(opts *bind.WatchOpts, sink chan<- *KernelDefaultValidatorChanged, oldValidator []common.Address, newValidator []common.Address) (event.Subscription, error) {

	var oldValidatorRule []interface{}
	for _, oldValidatorItem := range oldValidator {
		oldValidatorRule = append(oldValidatorRule, oldValidatorItem)
	}
	var newValidatorRule []interface{}
	for _, newValidatorItem := range newValidator {
		newValidatorRule = append(newValidatorRule, newValidatorItem)
	}

	logs, sub, err := _Kernel.contract.WatchLogs(opts, "DefaultValidatorChanged", oldValidatorRule, newValidatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(KernelDefaultValidatorChanged)
				if err := _Kernel.contract.UnpackLog(event, "DefaultValidatorChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDefaultValidatorChanged is a log parse operation binding the contract event 0xa35f5cdc5fbabb614b4cd5064ce5543f43dc8fab0e4da41255230eb8aba2531c.
//
// Solidity: event DefaultValidatorChanged(address indexed oldValidator, address indexed newValidator)
func (_Kernel *KernelFilterer) ParseDefaultValidatorChanged(log types.Log) (*KernelDefaultValidatorChanged, error) {
	event := new(KernelDefaultValidatorChanged)
	if err := _Kernel.contract.UnpackLog(event, "DefaultValidatorChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// KernelEIP712DomainChangedIterator is returned from FilterEIP712DomainChanged and is used to iterate over the raw logs and unpacked data for EIP712DomainChanged events raised by the Kernel contract.
type KernelEIP712DomainChangedIterator struct {
	Event *KernelEIP712DomainChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *KernelEIP712DomainChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(KernelEIP712DomainChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(KernelEIP712DomainChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *KernelEIP712DomainChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *KernelEIP712DomainChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// KernelEIP712DomainChanged represents a EIP712DomainChanged event raised by the Kernel contract.
type KernelEIP712DomainChanged struct {
	Raw types.Log // Blockchain specific contextual infos
}

// FilterEIP712DomainChanged is a free log retrieval operation binding the contract event 0x0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31.
//
// Solidity: event EIP712DomainChanged()
func (_Kernel *KernelFilterer) FilterEIP712DomainChanged(opts *bind.FilterOpts) (*KernelEIP712DomainChangedIterator, error) {

	logs, sub, err := _Kernel.contract.FilterLogs(opts, "EIP712DomainChanged")
	if err != nil {
		return nil, err
	}
	return &KernelEIP712DomainChangedIterator{contract: _Kernel.contract, event: "EIP712DomainChanged", logs: logs, sub: sub}, nil
}

// WatchEIP712DomainChanged is a free log subscription operation binding the contract event 0x0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31.
//
// Solidity: event EIP712DomainChanged()
func (_Kernel *KernelFilterer) WatchEIP712DomainChanged(opts *bind.WatchOpts, sink chan<- *KernelEIP712DomainChanged) (event.Subscription, error) {

	logs, sub, err := _Kernel.contract.WatchLogs(opts, "EIP712DomainChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(KernelEIP712DomainChanged)
				if err := _Kernel.contract.UnpackLog(event, "EIP712DomainChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseEIP712DomainChanged is a log parse operation binding the contract event 0x0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31.
//
// Solidity: event EIP712DomainChanged()
func (_Kernel *KernelFilterer) ParseEIP712DomainChanged(log types.Log) (*KernelEIP712DomainChanged, error) {
	event := new(KernelEIP712DomainChanged)
	if err := _Kernel.contract.UnpackLog(event, "EIP712DomainChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// KernelExecutionChangedIterator is returned from FilterExecutionChanged and is used to iterate over the raw logs and unpacked data for ExecutionChanged events raised by the Kernel contract.
type KernelExecutionChangedIterator struct {
	Event *KernelExecutionChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *KernelExecutionChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(KernelExecutionChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(KernelExecutionChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *KernelExecutionChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *KernelExecutionChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// KernelExecutionChanged represents a ExecutionChanged event raised by the Kernel contract.
type KernelExecutionChanged struct {
	Selector  [4]byte
	Executor  common.Address
	Validator common.Address
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterExecutionChanged is a free log retrieval operation binding the contract event 0xed03d2572564284398470d3f266a693e29ddfff3eba45fc06c5e91013d321353.
//
// Solidity: event ExecutionChanged(bytes4 indexed selector, address indexed executor, address indexed validator)
func (_Kernel *KernelFilterer) FilterExecutionChanged(opts *bind.FilterOpts, selector [][4]byte, executor []common.Address, validator []common.Address) (*KernelExecutionChangedIterator, error) {

	var selectorRule []interface{}
	for _, selectorItem := range selector {
		selectorRule = append(selectorRule, selectorItem)
	}
	var executorRule []interface{}
	for _, executorItem := range executor {
		executorRule = append(executorRule, executorItem)
	}
	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}

	logs, sub, err := _Kernel.contract.FilterLogs(opts, "ExecutionChanged", selectorRule, executorRule, validatorRule)
	if err != nil {
		return nil, err
	}
	return &KernelExecutionChangedIterator{contract: _Kernel.contract, event: "ExecutionChanged", logs: logs, sub: sub}, nil
}

// WatchExecutionChanged is a free log subscription operation binding the contract event 0xed03d2572564284398470d3f266a693e29ddfff3eba45fc06c5e91013d321353.
//
// Solidity: event ExecutionChanged(bytes4 indexed selector, address indexed executor, address indexed validator)
func (_Kernel *KernelFilterer) WatchExecutionChanged(opts *bind.WatchOpts, sink chan<- *KernelExecutionChanged, selector [][4]byte, executor []common.Address, validator []common.Address) (event.Subscription, error) {

	var selectorRule []interface{}
	for _, selectorItem := range selector {
		selectorRule = append(selectorRule, selectorItem)
	}
	var executorRule []interface{}
	for _, executorItem := range executor {
		executorRule = append(executorRule, executorItem)
	}
	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}

	logs, sub, err := _Kernel.contract.WatchLogs(opts, "ExecutionChanged", selectorRule, executorRule, validatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(KernelExecutionChanged)
				if err := _Kernel.contract.UnpackLog(event, "ExecutionChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseExecutionChanged is a log parse operation binding the contract event 0xed03d2572564284398470d3f266a693e29ddfff3eba45fc06c5e91013d321353.
//
// Solidity: event ExecutionChanged(bytes4 indexed selector, address indexed executor, address indexed validator)
func (_Kernel *KernelFilterer) ParseExecutionChanged(log types.Log) (*KernelExecutionChanged, error) {
	event := new(KernelExecutionChanged)
	if err := _Kernel.contract.UnpackLog(event, "ExecutionChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// KernelUpgradedIterator is returned from FilterUpgraded and is used to iterate over the raw logs and unpacked data for Upgraded events raised by the Kernel contract.
type KernelUpgradedIterator struct {
	Event *KernelUpgraded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *KernelUpgradedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(KernelUpgraded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(KernelUpgraded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *KernelUpgradedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *KernelUpgradedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// KernelUpgraded represents a Upgraded event raised by the Kernel contract.
type KernelUpgraded struct {
	NewImplementation common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterUpgraded is a free log retrieval operation binding the contract event 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b.
//
// Solidity: event Upgraded(address indexed newImplementation)
func (_Kernel *KernelFilterer) FilterUpgraded(opts *bind.FilterOpts, newImplementation []common.Address) (*KernelUpgradedIterator, error) {

	var newImplementationRule []interface{}
	for _, newImplementationItem := range newImplementation {
		newImplementationRule = append(newImplementationRule, newImplementationItem)
	}

	logs, sub, err := _Kernel.contract.FilterLogs(opts, "Upgraded", newImplementationRule)
	if err != nil {
		return nil, err
	}
	return &KernelUpgradedIterator{contract: _Kernel.contract, event: "Upgraded", logs: logs, sub: sub}, nil
}

// WatchUpgraded is a free log subscription operation binding the contract event 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b.
//
// Solidity: event Upgraded(address indexed newImplementation)
func (_Kernel *KernelFilterer) WatchUpgraded(opts *bind.WatchOpts, sink chan<- *KernelUpgraded, newImplementation []common.Address) (event.Subscription, error) {

	var newImplementationRule []interface{}
	for _, newImplementationItem := range newImplementation {
		newImplementationRule = append(newImplementationRule, newImplementationItem)
	}

	logs, sub, err := _Kernel.contract.WatchLogs(opts, "Upgraded", newImplementationRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(KernelUpgraded)
				if err := _Kernel.contract.UnpackLog(event, "Upgraded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpgraded is a log parse operation binding the contract event 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b.
//
// Solidity: event Upgraded(address indexed newImplementation)
func (_Kernel *KernelFilterer) ParseUpgraded(log types.Log) (*KernelUpgraded, error) {
	event := new(KernelUpgraded)
	if err := _Kernel.contract.UnpackLog(event, "Upgraded", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
