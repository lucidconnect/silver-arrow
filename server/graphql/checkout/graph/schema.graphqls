# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Query {
  fetchPayment(reference: String!): Payment!
  getBillingHistory(walletAddress: String!, productId: String!): [BillingHistory!]

}

type Mutation {
  # frontend sdk
  addAccount(input: Account!): String!
  createPaymentIntent(input: PaymentIntent!): String!
  validatePaymentIntent(input: RequestValidation!): TransactionData!
}

enum PaymentType {
  single
  recurring
}

enum PaymentStatus {
  failed
  pending
  success
}

# account creation
input Account {
	email: String
  address: String!
  signer: String
}

# payment data
input PaymentIntent {# attach the checkout session id
  type: PaymentType!
  email: String
  chain: Int!
  token: String!
  amount: Float!
  # interval: Int!
  checkoutSessionId: String
  productId: String!
  priceId: String!
  ownerAddress: String!
  walletAddress: String!
  firstChargeNow: Boolean! # should be decided upon creating a product
}

type Payment {
  chain: Int!
  token: String!
  status: PaymentStatus!
  amount: Float!
  source: String!
  productId: String!
  reference: String!
}

input RequestValidation {
  chain: Int!
  userOpHash: String!
  signedMessage: String!
}

type TransactionData {
  id: ID
  type: PaymentType!
  chain: Int!
	token: String!
  amount: Int!
	interval: Int!
  reference: String!
  productId: String!
	walletAddress: String!
  subscriptionKey: String!
  createdAt: String!
  transactionHash: String!
  transactionExplorer: String!
}

type BillingHistory {
  date: Time!
  amount: Float!
  explorerUrl: String!
}

scalar Time